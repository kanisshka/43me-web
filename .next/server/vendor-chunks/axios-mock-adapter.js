/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/axios-mock-adapter";
exports.ids = ["vendor-chunks/axios-mock-adapter"];
exports.modules = {

/***/ "(ssr)/./node_modules/axios-mock-adapter/src/handle_request.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios-mock-adapter/src/handle_request.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/axios-mock-adapter/src/utils.js\");\nfunction transformRequest(data) {\n    if (utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isBlob(data)) {\n        return data;\n    }\n    // Object and Array: returns a deep copy\n    if (utils.isObjectOrArray(data)) {\n        return JSON.parse(JSON.stringify(data));\n    }\n    // for primitives like string, undefined, null, number\n    return data;\n}\nfunction makeResponse(result, config) {\n    return {\n        status: result[0],\n        data: transformRequest(result[1]),\n        headers: result[2],\n        config: config,\n        request: {\n            responseURL: config.url\n        }\n    };\n}\nfunction passThroughRequest(mockAdapter, resolve, reject, config) {\n    // Axios v0.17 mutates the url to include the baseURL for non hostnames\n    // but does not remove the baseURL from the config\n    var baseURL = config.baseURL;\n    if (config.baseURL && !/^https?:/.test(config.baseURL)) {\n        baseURL = undefined;\n    }\n    // Axios pre 1.2\n    if (typeof mockAdapter.originalAdapter === \"function\") {\n        return mockAdapter.originalAdapter(config).then(resolve, reject);\n    }\n    mockAdapter.axiosInstanceWithoutInterceptors(Object.assign({}, config, {\n        baseURL: baseURL,\n        //  Use the original adapter, not the mock adapter\n        adapter: mockAdapter.originalAdapter,\n        // The request transformation runs on the original axios handler already\n        transformRequest: [],\n        transformResponse: []\n    })).then(resolve, reject);\n}\nfunction handleRequest(mockAdapter, resolve, reject, config) {\n    var url = config.url || \"\";\n    // TODO we're not hitting this `if` in any of the tests, investigate\n    if (config.baseURL && url.substr(0, config.baseURL.length) === config.baseURL) {\n        url = url.slice(config.baseURL.length);\n    }\n    delete config.adapter;\n    mockAdapter.history[config.method].push(config);\n    var handler = utils.findHandler(mockAdapter.handlers, config.method, url, config.data, config.params, config.headers && config.headers.constructor.name === \"AxiosHeaders\" ? Object.assign({}, config.headers) : config.headers, config.baseURL);\n    if (handler) {\n        if (handler.length === 7) {\n            utils.purgeIfReplyOnce(mockAdapter, handler);\n        }\n        if (handler.length === 2) {\n            // passThrough handler\n            passThroughRequest(mockAdapter, resolve, reject, config);\n        } else if (typeof handler[3] !== \"function\") {\n            utils.settle(resolve, reject, makeResponse(handler.slice(3), config), getEffectiveDelay(mockAdapter, handler));\n        } else {\n            var result = handler[3](config);\n            // TODO throw a sane exception when return value is incorrect\n            if (typeof result.then !== \"function\") {\n                utils.settle(resolve, reject, makeResponse(result, config), getEffectiveDelay(mockAdapter, handler));\n            } else {\n                result.then(function(result) {\n                    if (result.config && result.status) {\n                        utils.settle(resolve, reject, makeResponse([\n                            result.status,\n                            result.data,\n                            result.headers\n                        ], result.config), 0);\n                    } else {\n                        utils.settle(resolve, reject, makeResponse(result, config), getEffectiveDelay(mockAdapter, handler));\n                    }\n                }, function(error) {\n                    if (mockAdapter.delayResponse > 0) {\n                        setTimeout(function() {\n                            reject(error);\n                        }, getEffectiveDelay(mockAdapter, handler));\n                    } else {\n                        reject(error);\n                    }\n                });\n            }\n        }\n    } else {\n        // handler not found\n        switch(mockAdapter.onNoMatch){\n            case \"passthrough\":\n                passThroughRequest(mockAdapter, resolve, reject, config);\n                break;\n            case \"throwException\":\n                throw utils.createCouldNotFindMockError(config);\n            default:\n                utils.settle(resolve, reject, {\n                    status: 404,\n                    config: config\n                }, mockAdapter.delayResponse);\n        }\n    }\n}\nfunction getEffectiveDelay(adapter, handler) {\n    var delayPerRequest;\n    if (handler.length === 8) {\n        delayPerRequest = handler[7];\n    }\n    return delayPerRequest ? delayPerRequest : adapter.delayResponse;\n}\nmodule.exports = handleRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/axios-mock-adapter/src/handle_request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/axios-mock-adapter/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/axios-mock-adapter/src/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar handleRequest = __webpack_require__(/*! ./handle_request */ \"(ssr)/./node_modules/axios-mock-adapter/src/handle_request.js\");\nvar utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/axios-mock-adapter/src/utils.js\");\nvar VERBS = [\n    \"get\",\n    \"post\",\n    \"head\",\n    \"delete\",\n    \"patch\",\n    \"put\",\n    \"options\",\n    \"list\",\n    \"link\",\n    \"unlink\"\n];\nfunction adapter() {\n    return (function(config) {\n        var mockAdapter = this;\n        return new Promise(function(resolve, reject) {\n            handleRequest(mockAdapter, resolve, reject, config);\n        });\n    }).bind(this);\n}\nfunction getVerbObject() {\n    return VERBS.reduce(function(accumulator, verb) {\n        accumulator[verb] = [];\n        return accumulator;\n    }, {});\n}\nfunction reset() {\n    resetHandlers.call(this);\n    resetHistory.call(this);\n}\nfunction resetHandlers() {\n    this.handlers = getVerbObject();\n}\nfunction resetHistory() {\n    this.history = getVerbObject();\n}\nfunction MockAdapter(axiosInstance, options) {\n    reset.call(this);\n    if (axiosInstance) {\n        this.axiosInstance = axiosInstance;\n        // Clone the axios instance to remove interceptors\n        // this is used for the passThrough mode with axios > 1.2\n        this.axiosInstanceWithoutInterceptors = axiosInstance.create ? axiosInstance.create() : undefined;\n        this.originalAdapter = axiosInstance.defaults.adapter;\n        this.delayResponse = options && options.delayResponse > 0 ? options.delayResponse : null;\n        this.onNoMatch = options && options.onNoMatch || null;\n        axiosInstance.defaults.adapter = this.adapter.call(this);\n    } else {\n        throw new Error(\"Please provide an instance of axios to mock\");\n    }\n}\nMockAdapter.prototype.adapter = adapter;\nMockAdapter.prototype.restore = function restore() {\n    if (this.axiosInstance) {\n        this.axiosInstance.defaults.adapter = this.originalAdapter;\n        this.axiosInstance = undefined;\n    }\n};\nMockAdapter.prototype.reset = reset;\nMockAdapter.prototype.resetHandlers = resetHandlers;\nMockAdapter.prototype.resetHistory = resetHistory;\nVERBS.concat(\"any\").forEach(function(method) {\n    var methodName = \"on\" + method.charAt(0).toUpperCase() + method.slice(1);\n    MockAdapter.prototype[methodName] = function(matcher, body, requestHeaders) {\n        var _this = this;\n        var matcher = matcher === undefined ? /.*/ : matcher;\n        function reply(code, response, headers) {\n            var handler = [\n                matcher,\n                body,\n                requestHeaders,\n                code,\n                response,\n                headers\n            ];\n            addHandler(method, _this.handlers, handler);\n            return _this;\n        }\n        function replyWithDelay(delay, code, response, headers) {\n            var handler = [\n                matcher,\n                body,\n                requestHeaders,\n                code,\n                response,\n                headers,\n                false,\n                delay\n            ];\n            addHandler(method, _this.handlers, handler);\n            return _this;\n        }\n        function withDelayInMs(delay) {\n            return function(code, response, headers) {\n                replyWithDelay(delay, code, response, headers);\n            };\n        }\n        function replyOnce(code, response, headers) {\n            var handler = [\n                matcher,\n                body,\n                requestHeaders,\n                code,\n                response,\n                headers,\n                true\n            ];\n            addHandler(method, _this.handlers, handler);\n            return _this;\n        }\n        return {\n            reply: reply,\n            replyOnce: replyOnce,\n            withDelayInMs: withDelayInMs,\n            passThrough: function passThrough() {\n                var handler = [\n                    matcher,\n                    body\n                ];\n                addHandler(method, _this.handlers, handler);\n                return _this;\n            },\n            abortRequest: function() {\n                return reply(function(config) {\n                    var error = utils.createAxiosError(\"Request aborted\", config, undefined, \"ECONNABORTED\");\n                    return Promise.reject(error);\n                });\n            },\n            abortRequestOnce: function() {\n                return replyOnce(function(config) {\n                    var error = utils.createAxiosError(\"Request aborted\", config, undefined, \"ECONNABORTED\");\n                    return Promise.reject(error);\n                });\n            },\n            networkError: function() {\n                return reply(function(config) {\n                    var error = utils.createAxiosError(\"Network Error\", config);\n                    return Promise.reject(error);\n                });\n            },\n            networkErrorOnce: function() {\n                return replyOnce(function(config) {\n                    var error = utils.createAxiosError(\"Network Error\", config);\n                    return Promise.reject(error);\n                });\n            },\n            timeout: function() {\n                return reply(function(config) {\n                    var error = utils.createAxiosError(config.timeoutErrorMessage || \"timeout of \" + config.timeout + \"ms exceeded\", config, undefined, config.transitional && config.transitional.clarifyTimeoutError ? \"ETIMEDOUT\" : \"ECONNABORTED\");\n                    return Promise.reject(error);\n                });\n            },\n            timeoutOnce: function() {\n                return replyOnce(function(config) {\n                    var error = utils.createAxiosError(config.timeoutErrorMessage || \"timeout of \" + config.timeout + \"ms exceeded\", config, undefined, config.transitional && config.transitional.clarifyTimeoutError ? \"ETIMEDOUT\" : \"ECONNABORTED\");\n                    return Promise.reject(error);\n                });\n            }\n        };\n    };\n});\nfunction findInHandlers(method, handlers, handler) {\n    var index = -1;\n    for(var i = 0; i < handlers[method].length; i += 1){\n        var item = handlers[method][i];\n        var isReplyOnce = item.length === 7;\n        var comparePaths = item[0] instanceof RegExp && handler[0] instanceof RegExp ? String(item[0]) === String(handler[0]) : item[0] === handler[0];\n        var isSame = comparePaths && utils.isEqual(item[1], handler[1]) && utils.isEqual(item[2], handler[2]);\n        if (isSame && !isReplyOnce) {\n            index = i;\n        }\n    }\n    return index;\n}\nfunction addHandler(method, handlers, handler) {\n    if (method === \"any\") {\n        VERBS.forEach(function(verb) {\n            handlers[verb].push(handler);\n        });\n    } else {\n        var indexOfExistingHandler = findInHandlers(method, handlers, handler);\n        if (indexOfExistingHandler > -1 && handler.length < 7) {\n            handlers[method].splice(indexOfExistingHandler, 1, handler);\n        } else {\n            handlers[method].push(handler);\n        }\n    }\n}\nmodule.exports = MockAdapter;\nmodule.exports[\"default\"] = MockAdapter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/axios-mock-adapter/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/axios-mock-adapter/src/is_blob.js":
/*!********************************************************!*\
  !*** ./node_modules/axios-mock-adapter/src/is_blob.js ***!
  \********************************************************/
/***/ ((module) => {

eval("/*!\n * MIT License\n *\n * Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n * documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n * Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */ function isBlob(value) {\n    if (typeof Blob === \"undefined\") {\n        return false;\n    }\n    return value instanceof Blob || Object.prototype.toString.call(value) === \"[object Blob]\";\n}\nmodule.exports = isBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb2Rlcm5pemUtbWFpbi8uL25vZGVfbW9kdWxlcy9heGlvcy1tb2NrLWFkYXB0ZXIvc3JjL2lzX2Jsb2IuanM/YjliYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIE1JVCBMaWNlbnNlXG4gKlxuICogQ29weXJpZ2h0IChjKSBTaW5kcmUgU29yaHVzIDxzaW5kcmVzb3JodXNAZ21haWwuY29tPiAoaHR0cHM6Ly9zaW5kcmVzb3JodXMuY29tKVxuICpcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZFxuICogZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlXG4gKiByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4gKiBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4gKlxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGVcbiAqIFNvZnR3YXJlLlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEVcbiAqIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUlxuICogQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuICogT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuICovXG5cbmZ1bmN0aW9uIGlzQmxvYih2YWx1ZSkge1xuICBpZiAodHlwZW9mIEJsb2IgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgQmxvYiB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNCbG9iO1xuIl0sIm5hbWVzIjpbImlzQmxvYiIsInZhbHVlIiwiQmxvYiIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztDQWlCQyxHQUVELFNBQVNBLE9BQU9DLEtBQUs7SUFDbkIsSUFBSSxPQUFPQyxTQUFTLGFBQWE7UUFDL0IsT0FBTztJQUNUO0lBRUEsT0FBT0QsaUJBQWlCQyxRQUFRQyxPQUFPQyxTQUFTLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDTCxXQUFXO0FBQzVFO0FBRUFNLE9BQU9DLE9BQU8sR0FBR1IiLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXhpb3MtbW9jay1hZGFwdGVyL3NyYy9pc19ibG9iLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/axios-mock-adapter/src/is_blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/axios-mock-adapter/src/utils.js":
/*!******************************************************!*\
  !*** ./node_modules/axios-mock-adapter/src/utils.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar axios = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\");\nvar isEqual = __webpack_require__(/*! fast-deep-equal */ \"(ssr)/./node_modules/fast-deep-equal/index.js\");\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"(ssr)/./node_modules/is-buffer/index.js\");\nvar isBlob = __webpack_require__(/*! ./is_blob */ \"(ssr)/./node_modules/axios-mock-adapter/src/is_blob.js\");\nvar toString = Object.prototype.toString;\nfunction find(array, predicate) {\n    var length = array.length;\n    for(var i = 0; i < length; i++){\n        var value = array[i];\n        if (predicate(value)) return value;\n    }\n}\nfunction isFunction(val) {\n    return toString.call(val) === \"[object Function]\";\n}\nfunction isObjectOrArray(val) {\n    return val !== null && typeof val === \"object\";\n}\nfunction isStream(val) {\n    return isObjectOrArray(val) && isFunction(val.pipe);\n}\nfunction isArrayBuffer(val) {\n    return toString.call(val) === \"[object ArrayBuffer]\";\n}\nfunction combineUrls(baseURL, url) {\n    if (baseURL) {\n        return baseURL.replace(/\\/+$/, \"\") + \"/\" + url.replace(/^\\/+/, \"\");\n    }\n    return url;\n}\nfunction findHandler(handlers, method, url, body, parameters, headers, baseURL) {\n    return find(handlers[method.toLowerCase()], function(handler) {\n        if (typeof handler[0] === \"string\") {\n            return (isUrlMatching(url, handler[0]) || isUrlMatching(combineUrls(baseURL, url), handler[0])) && isBodyOrParametersMatching(method, body, parameters, handler[1]) && isObjectMatching(headers, handler[2]);\n        } else if (handler[0] instanceof RegExp) {\n            return (handler[0].test(url) || handler[0].test(combineUrls(baseURL, url))) && isBodyOrParametersMatching(method, body, parameters, handler[1]) && isObjectMatching(headers, handler[2]);\n        }\n    });\n}\nfunction isUrlMatching(url, required) {\n    var noSlashUrl = url[0] === \"/\" ? url.substr(1) : url;\n    var noSlashRequired = required[0] === \"/\" ? required.substr(1) : required;\n    return noSlashUrl === noSlashRequired;\n}\nfunction isBodyOrParametersMatching(method, body, parameters, required) {\n    var allowedParamsMethods = [\n        \"delete\",\n        \"get\",\n        \"head\",\n        \"options\"\n    ];\n    if (allowedParamsMethods.indexOf(method.toLowerCase()) >= 0) {\n        var data = required ? required.data : undefined;\n        var params = required ? required.params : undefined;\n        return isObjectMatching(parameters, params) && isBodyMatching(body, data);\n    } else {\n        return isBodyMatching(body, required);\n    }\n}\nfunction isObjectMatching(actual, expected) {\n    if (expected === undefined) return true;\n    if (typeof expected.asymmetricMatch === \"function\") {\n        return expected.asymmetricMatch(actual);\n    }\n    return isEqual(actual, expected);\n}\nfunction isBodyMatching(body, requiredBody) {\n    if (requiredBody === undefined) {\n        return true;\n    }\n    var parsedBody;\n    try {\n        parsedBody = JSON.parse(body);\n    } catch (e) {}\n    return isObjectMatching(parsedBody ? parsedBody : body, requiredBody);\n}\nfunction purgeIfReplyOnce(mock, handler) {\n    Object.keys(mock.handlers).forEach(function(key) {\n        var index = mock.handlers[key].indexOf(handler);\n        if (index > -1) {\n            mock.handlers[key].splice(index, 1);\n        }\n    });\n}\nfunction settle(resolve, reject, response, delay) {\n    if (delay > 0) {\n        setTimeout(settle, delay, resolve, reject, response);\n        return;\n    }\n    if (!response.config.validateStatus || response.config.validateStatus(response.status)) {\n        resolve(response);\n    } else {\n        reject(createAxiosError(\"Request failed with status code \" + response.status, response.config, response));\n    }\n}\nfunction createAxiosError(message, config, response, code) {\n    // axios v0.27.0+ defines AxiosError as constructor\n    if (typeof axios.AxiosError === \"function\") {\n        return axios.AxiosError.from(new Error(message), code, config, null, response);\n    }\n    // handling for axios v0.26.1 and below\n    var error = new Error(message);\n    error.isAxiosError = true;\n    error.config = config;\n    if (response !== undefined) {\n        error.response = response;\n    }\n    if (code !== undefined) {\n        error.code = code;\n    }\n    error.toJSON = function toJSON() {\n        return {\n            // Standard\n            message: this.message,\n            name: this.name,\n            // Microsoft\n            description: this.description,\n            number: this.number,\n            // Mozilla\n            fileName: this.fileName,\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n            stack: this.stack,\n            // Axios\n            config: this.config,\n            code: this.code\n        };\n    };\n    return error;\n}\nfunction createCouldNotFindMockError(config) {\n    var message = \"Could not find mock for: \\n\" + JSON.stringify(config, [\n        \"method\",\n        \"url\"\n    ], 2);\n    var error = new Error(message);\n    error.isCouldNotFindMockError = true;\n    error.url = config.url;\n    error.method = config.method;\n    return error;\n}\nmodule.exports = {\n    find: find,\n    findHandler: findHandler,\n    purgeIfReplyOnce: purgeIfReplyOnce,\n    settle: settle,\n    isStream: isStream,\n    isArrayBuffer: isArrayBuffer,\n    isFunction: isFunction,\n    isObjectOrArray: isObjectOrArray,\n    isBuffer: isBuffer,\n    isBlob: isBlob,\n    isBodyOrParametersMatching: isBodyOrParametersMatching,\n    isEqual: isEqual,\n    createAxiosError: createAxiosError,\n    createCouldNotFindMockError: createCouldNotFindMockError\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/axios-mock-adapter/src/utils.js\n");

/***/ })

};
;